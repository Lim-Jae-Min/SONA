<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.sona.music.lesson.dao.LogDAO">
	
	<select id="lessonInfo" resultType="com.sona.music.lesson.dto.LogDTO">
		SELECT co.class_name
			, ah.reg_date AS start_date
			, co.class_idx
			, co.class_price
			, co.class_times AS total_times
			, (SELECT COUNT(ch.ch_idx) FROM CLASS_HISTORY ch WHERE ch.apply_detail = ah.apply_detail) AS accumulate_times
			, ah.apply_idx
			, ah.user_id
			, ah.apply_detail
		FROM APPLY_HISTORY ah JOIN CLASS_OPEN co ON ah.class_idx = co.class_idx
		WHERE ah.apply_idx = #{param1}
	</select>
	
	<select id="logProfile" resultType="com.sona.music.lesson.dto.LogDTO">
		SELECT
			u.user_id
			, u.user_name
			, u.user_email
			, u.user_phone
			, (SELECT pb.new_filename FROM PHOTO_BOARD pb WHERE pb.user_id = u.user_id AND pb.photo_category = 'Profile' 
				ORDER BY photo_idx DESC LIMIT 1) AS new_filename
		FROM USERS u join CLASS_OPEN co ON u.user_id = co.user_id
		WHERE co.class_idx = (SELECT ah.class_idx FROM APPLY_HISTORY ah WHERE ah.apply_idx = #{param1})
			UNION ALL
		SELECT 
			u2.user_id
			, u2.user_name
			, u2.user_email
			, u2.user_phone
			, (SELECT pb.new_filename FROM PHOTO_BOARD pb WHERE pb.user_id = u2.user_id AND pb.photo_category = 'Profile' 
				ORDER BY photo_idx DESC LIMIT 1) AS new_filename
		FROM USERS u2 
		WHERE u2.user_id = (SELECT ah.user_id FROM APPLY_HISTORY ah WHERE ah.apply_idx = #{param1})
	</select>
	
	<select id="lessonLogList" resultType="com.sona.music.lesson.dto.LogDTO">
		SELECT 
			ch.ch_content
			, ch.ch_date
			, ch.ch_write_date
			, ch.ch_idx
			, ch.ch_result
		FROM CLASS_HISTORY ch
		WHERE ch.apply_detail = #{param1}
		ORDER BY ch.ch_idx ASC
	</select>
	
	<insert id="lessonLogWrite" parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO CLASS_HISTORY(class_idx, student_id, ch_content, ch_date, ch_result, apply_detail) 
			VALUES(#{class_idx}, #{user_id}, #{ch_content}, #{ch_date}, #{ch_result}, 
			(SELECT ah.apply_detail FROM APPLY_HISTORY ah WHERE ah.apply_idx = #{apply_idx}))
	</insert>
	
	<insert id="lessonAbsent" parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO CLASS_HISTORY(class_idx, student_id, ch_content, ch_date, ch_result, apply_detail) 
			VALUES(#{class_idx}, #{user_id}, #{ch_content}, #{ch_date}, #{ch_result}, 
			(SELECT ah.apply_detail FROM APPLY_HISTORY ah WHERE ah.apply_idx = #{apply_idx}))
	</insert>

	<update id="lessonLogEdit" parameterType="com.sona.music.lesson.dto.LogDTO">
		UPDATE CLASS_HISTORY SET 
			ch_content = #{ch_content}
			, ch_date = #{ch_date}
			, ch_write_date = curdate()
			, ch_result = #{ch_result}
		WHERE ch_idx = #{ch_idx}
	</update>
	
	<insert id="lessonStop" parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO CLASS_HISTORY(class_idx, student_id, ch_content, ch_date, ch_result, apply_detail) 
			VALUES(#{class_idx}, #{user_id}, '강의 종료', curdate(), '강의 종료', 
			(SELECT ah.apply_detail FROM APPLY_HISTORY ah WHERE ah.apply_idx = #{apply_idx}))
	</insert>

	<select id="reviewCheck" resultType="String">
		SELECT 
			r.review_idx
		FROM REVIEW r WHERE r.apply_detail = #{param1}
	</select>
	
	<insert id="studentPayback"
		useGeneratedKeys="true"
		keyColumn="point_idx"
		keyProperty="point_idx"
		parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO USER_POINT(user_id, point_type, point)
			VALUES(#{student_id}, '강의 정산', (#{class_price} / #{total_times} * (#{total_times} - #{accumulate_times}) * 0.95))
	</insert>
	
	<insert id="studentCalculate" parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO POINT_CALCULATION(point_idx, class_idx, user_id, p_cal_amount, attendance_rate, p_actual_amount, apply_detail)
			VALUES(#{point_idx}, #{class_idx}, #{student_id}, (#{class_price} / #{total_times} * (#{total_times} - #{accumulate_times}))
			, (#{accumulate_times} / #{total_times}), (#{class_price} / #{total_times} * (#{total_times} - #{accumulate_times}) * 0.95)
			, #{apply_detail})
	</insert>
	
	<insert id="teacherPayment"
		useGeneratedKeys="true"
		keyColumn="point_idx"
		keyProperty="point_idx"
		parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO USER_POINT(user_id, point_type, point)
			VALUES(#{teacher_id}, '강의 정산', (#{class_price} / #{total_times} * #{accumulate_times} * 0.95))
	</insert>
	
	<insert id="teacherCalculate" parameterType="com.sona.music.lesson.dto.LogDTO">
		INSERT INTO POINT_CALCULATION(point_idx, class_idx, user_id, p_cal_amount, attendance_rate, p_actual_amount, apply_detail)
			VALUES(#{point_idx}, #{class_idx}, #{teacher_id}, (#{class_price} / #{total_times} * #{accumulate_times})
			, (#{accumulate_times} / #{total_times}), (#{class_price} / #{total_times} * #{accumulate_times} * 0.95)
			, #{apply_detail})
	</insert>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.sona.music.admin.dao.AdminDAO">


	<update id="noticeDel" >
		UPDATE NOTICE_BOARD set notice_delete = 1 WHERE notice_idx = #{param1}
	</update>
	
	<select id="adminCheck" resultType="Integer">
		SELECT COUNT(admin_id) FROM ADMIN WHERE admin_id = #{param1}
	</select>
	
	
	<insert id = "noticeWrite"  
	useGeneratedKeys="true" 
	keyColumn="notice_idx"
	keyProperty="notice_idx"
	parameterType="com.sona.music.admin.dto.AdminDTO">
		INSERT INTO NOTICE_BOARD(
			admin_id, notice_title,notice_content,notice_delete
			)values(
			#{admin_id},#{notice_title},#{notice_content},0
			)
	</insert>
	
	<update id = "noticeUpdate"  
	useGeneratedKeys="true" 
	keyColumn="notice_idx"
	keyProperty="notice_idx"
	parameterType="com.sona.music.admin.dto.AdminDTO">
		UPDATE NOTICE_BOARD SET
			notice_title=#{notice_title},
			notice_content=#{notice_content}
			WHERE notice_idx = #{notice_idx}
	</update>
	
	<insert id="noticePhotoWrite">
		INSERT INTO PHOTO_BOARD (user_id,ori_filename,new_filename,post_idx,photo_category)
			VALUES(#{param4},#{param1},#{param2},#{param3},#{param5})
	</insert>
	
	<delete id="photoDel">
    DELETE FROM PHOTO_BOARD WHERE post_idx = #{param1} AND photo_category = #{param2} AND new_filename = #{param3}
	</delete>
	
	<insert id="adminFaqWriteDo" >
		INSERT INTO FAQ_BOARD (admin_id,faq_title,faq_answer,faq_target)
			VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
	
	<update id = "faqEdit" parameterType="com.sona.music.admin.dto.AdminDTO">
		UPDATE FAQ_BOARD SET
			faq_title = #{faq_title},
			faq_answer = #{faq_answer},
			faq_target = #{faq_target}
			WHERE faq_idx = #{faq_idx}
	</update>
	
		<update id="faqDel" >
		UPDATE FAQ_BOARD set faq_delete = 1 WHERE faq_idx = #{param1}
	</update>
		
  	<select id="reportAllCount" resultType="int">
		SELECT CEIL (COUNT(report_idx)/#{param1}) AS pages FROM REPORT_BOARD Where
				<if test='param3 != null'>					 
					 <if test='param3 == 2'>
					 	report_state LIKE '%${param3}%' 
					 </if>
					<if test='param3 == 1'>
						 board_category LIKE '%${param3}%' 	
					</if> 
				</if>	

	</select> 
	
	<select id="showReportSearch" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT * FROM REPORT_BOARD Where

				<if test='param4 != null'>
					 
					 <if test='param4 == 2'>
					 	report_state LIKE '%${param3}%' 
					 </if>
					<if test='param4 == 1'>
						 board_category LIKE '%${param3}%' 	
					</if> 
				</if>		
			ORDER BY report_idx DESC LIMIT #{param1},#{param2};
	</select>	
	
	<select id="reportDetailAdmin" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT
		    rb.board_idx,
		    rb.report_idx,
		    r.review_title AS review_title,
		    co.class_name AS class_name,
		    rb.report_state,
		    rb.report_content,
		    rb.board_category,
		    rb.report_date,
		    u.user_name,
		    a.ADMIN_ID
		FROM
		    REPORT_BOARD rb
		LEFT JOIN
		    REVIEW r ON rb.board_idx = r.review_idx
		LEFT JOIN
		    CLASS_OPEN co ON rb.board_idx = co.class_idx
		    	join USERS u on u.USER_ID = co.USER_ID
		    	join ADMIN a
		    	  where rb.report_idx = #{param1}
	</select>
	
    <update id="updateReportState">
        UPDATE REPORT_BOARD
        SET report_state = #{param2}
        WHERE report_idx = #{param1}
    </update>
    
    
	<insert id="adminActionWriteDo">
		INSERT INTO ACTION_HISTORY (report_idx,admin_id,action_content)
			VALUES(#{param1},#{param2},#{param3})
	</insert>
	
	<select id="showSuspensionSearch" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT bu.banned_idx, bu.action_category, u.user_name, bu.start_date, bu.end_date FROM BANNED_USER bu
			 join USERS u on bu.user_id = u.user_id 
				 Where
				<if test='param4 != null'>
					 
					 <if test='param4 == 2'>
					 	bu.action_category LIKE '%${param3}%' 
					 </if>
					<if test='param4 == 1'>
						 u.user_name LIKE '%${param3}%' 	
					</if> 
				</if>		
			ORDER BY bu.banned_idx DESC LIMIT #{param1},#{param2};
	</select>
	
	<select id="suspensionAllCount" resultType="int">
		SELECT CEIL (COUNT(banned_idx)/#{param1}) AS pages FROM BANNED_USER bu
			join USERS u on bu.user_id = u.user_id  Where
				<if test='param3 != null'>					 
					 <if test='param3 == 2'>
					 	bu.action_category LIKE '%${param3}%' 
					 </if>
					<if test='param3 == 1'>
						 u.user_name LIKE '%${param3}%' 	
					</if> 
				</if>	

	</select> 
		  
	<select id="adminData" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT
			((SELECT COUNT(sb.sug_idx) FROM SUG_BOARD sb) - (SELECT COUNT(sa.sug_idx) FROM SUG_ANSWER sa)) AS waiting_suggestions
			, ((SELECT COUNT(rb.report_idx) FROM REPORT_BOARD rb) - (SELECT COUNT(ah.action_idx) FROM ACTION_HISTORY ah)) AS waiting_report
			, (SELECT COUNT(u.user_id) FROM USERS u) AS user_count
			, ((SELECT CASE WHEN (SUM(up.POINT) * 0.05) IS NULL THEN 0
					ELSE (SUM(up.POINT) * 0.05) END FROM USER_POINT up WHERE up.point_type = '충전') + 
				(SELECT CASE WHEN (SUM(pc.p_cal_amount) - SUM(pc.p_actual_amount)) IS NULL THEN 0
					ELSE (SUM(pc.p_cal_amount) - SUM(pc.p_actual_amount)) END FROM POINT_CALCULATION pc)) AS profit
	</select>
	
	<select id="userData" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT 
			(SELECT COUNT(u.user_id) FROM USERS u WHERE MONTH(u.user_reg_date) = #{param3} AND u.user_type = '수강생') AS amount_student
			, (SELECT COUNT(u.user_id) FROM USERS u WHERE MONTH(u.user_reg_date) = #{param3} AND u.user_type = '강사') AS amount_teacher
			, (SELECT COUNT(co.class_idx) FROM CLASS_OPEN co WHERE MONTH(co.class_reg_date) = #{param3}) AS amount_lesson
			UNION ALL
		SELECT 
			(SELECT COUNT(u.user_id) FROM USERS u WHERE MONTH(u.user_reg_date) = #{param2} AND u.user_type = '수강생') AS amount_student
			, (SELECT COUNT(u.user_id) FROM USERS u WHERE MONTH(u.user_reg_date) = #{param2} AND u.user_type = '강사') AS amount_teacher
			, (SELECT COUNT(co.class_idx) FROM CLASS_OPEN co WHERE MONTH(co.class_reg_date) = #{param2}) AS amount_lesson
			UNION ALL
		SELECT 
			(SELECT COUNT(u.user_id) FROM USERS u WHERE MONTH(u.user_reg_date) = #{param1} AND u.user_type = '수강생') AS amount_student
			, (SELECT COUNT(u.user_id) FROM USERS u WHERE MONTH(u.user_reg_date) = #{param1} AND u.user_type = '강사') AS amount_teacher
			, (SELECT COUNT(co.class_idx) FROM CLASS_OPEN co WHERE MONTH(co.class_reg_date) = #{param1}) AS amount_lesson
	</select>
	
	<select id="adminUserListCall" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT 
			u.user_id
			, u.user_name
			, u.user_type
			, u.user_reg_date
		FROM USERS u
		<if test="param4 != ''">
			WHERE
			<if test="param3 == 'name'">
				u.user_name LIKE CONCAT('%', #{param4}, '%')
			</if>
			<if test="param3 == 'id'">
				u.user_id LIKE CONCAT('%', #{param4}, '%')
			</if>
			<if test="param3 == 'type'">
				u.user_type LIKE CONCAT('%', #{param4}, '%')
			</if>
		</if>
		ORDER BY u.user_reg_date DESC LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="adminUserListCount" resultType="Integer">
		SELECT CEIL(COUNT(user_id)/#{param1}) FROM USERS
		<if test="param3 != ''">
			WHERE
			<if test="param2 == 'name'">
				user_name LIKE CONCAT('%', #{param3}, '%')
			</if>
			<if test="param2 == 'id'">
				user_id LIKE CONCAT('%', #{param3}, '%')
			</if>
			<if test="param2 == 'type'">
				user_type LIKE CONCAT('%', #{param3}, '%')
			</if>
		</if>
	</select>
	
	<select id="userCount" resultType="Integer">
		SELECT COUNT(user_id) FROM USERS
		<if test="param2 != ''">
			WHERE
			<if test="param1 == 'name'">
				user_name LIKE CONCAT('%', #{param2}, '%')
			</if>
			<if test="param1 == 'id'">
				user_id LIKE CONCAT('%', #{param2}, '%')
			</if>
			<if test="param1 == 'type'">
				user_type LIKE CONCAT('%', #{param2}, '%')
			</if>
		</if>
	</select>
	
	<select id="adminUserDetail" resultType="com.sona.music.admin.dto.AdminDTO">
		SELECT
			(SELECT pb.new_filename FROM PHOTO_BOARD pb WHERE pb.user_id = u.user_id AND pb.photo_category = 'userinfo'
				ORDER BY pb.photo_idx DESC LIMIT 1) AS new_filename
			, u.user_name
			, u.user_type
			, u.user_id
			, FORMAT((36.5 + COALESCE((SELECT SUM(mh.manner_variance) FROM MANNER_HISTORY mh WHERE mh.user_id = u.user_id), 0)), 2) AS manner
			, u.user_pass
			, u.user_email
			, u.user_phone
			, u.user_accountnumber 
			, u.user_bank
			, CASE WHEN (SELECT sum(up.POINT) FROM USER_POINT up WHERE up.user_id = u.user_id) IS NULL THEN 0
				ELSE (SELECT sum(up.POINT) FROM USER_POINT up WHERE up.user_id = u.user_id) END AS point
			, (SELECT MAX(bu.start_date) FROM BANNED_USER bu WHERE bu.user_id = u.user_id) AS banned_start_date
			, (SELECT MAX(bu.end_date) FROM BANNED_USER bu WHERE bu.user_id = u.user_id) AS banned_end_date
		FROM USERS u
		WHERE u.user_id = #{param1}
	</select>
	
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.sona.music.member.dao.MemberDAO">

	<select id="findIdEmail" resultType="String">
		SELECT USER_EMAIL FROM USERS WHERE USER_EMAIL = #{param1}
	</select>
	


	<select id="findId" resultType="String">
		SELECT USER_ID FROM USERS WHERE USER_EMAIL = #{param1}
	</select>
	
	<select id="findPw" resultType="String">
		SELECT USER_PASS FROM USERS WHERE USER_ID = #{param1} AND USER_EMAIL = #{param2}
	</select>
	
	<select id="findPwcheckId" resultType="String">
		SELECT USER_ID FROM USERS WHERE USER_ID = #{param1}
	</select>
	
	<select id="findPwEmail" resultType="String">
		SELECT USER_EMAIL FROM USERS WHERE USER_EMAIL = #{param1} AND USER_ID = #{param2}
	</select>
	
	<update id="changePw">
		UPDATE USERS SET USER_PASS = #{param2} WHERE USER_ID = #{param1}
	</update>
	
 
	<select id="login" resultType="com.sona.music.member.dto.MemberDTO">
		select 
			u.USER_ID,
			u.USER_NAME,
			u.USER_TYPE,
			CONCAT(FORMAT((SELECT (SUM(mh.manner_variance) + 36.5) 
				FROM MANNER_HISTORY mh), 2), '') AS manner,
			(SELECT sum(up.POINT) 
				FROM USER_POINT up WHERE up.user_id = u.user_id) as point,
			(SELECT COUNT(ah.alarm_idx) FROM ALARM_HISTORY ah WHERE ah.user_id = #{param1} AND ALARM_VIEWS = 0) AS alarm_count
		FROM USERS u WHERE u.USER_ID = #{param1} AND u.USER_PASS = #{param2}	
	</select>
	
	<select id="overlay" resultType="int">
		SELECT COUNT(USER_ID) FROM USERS WHERE USER_ID = #{param1}
   </select>
	
	<insert id ="join" parameterType="map">
		INSERT INTO USERS(USER_ID,USER_NAME,USER_EMAIL,USER_PASS,USER_PHONE,USER_ACCOUNTNUMBER,USER_TYPE,USER_BANK)
		VALUES(#{id},#{name},#{email},#{pw},#{phone},#{accountnumber},#{usertype},#{bank})
	</insert>
	
	
	
	<select id="detail" resultType="com.sona.music.member.dto.MemberDTO">
		select 
			u.USER_ID,
			u.USER_NAME,
			u.USER_TYPE,
			CONCAT(FORMAT((SELECT (SUM(mh.manner_variance) + 36.5) 
				FROM MANNER_HISTORY mh), 2), '') AS manner,
			(SELECT pb.NEW_FILENAME from PHOTO_BOARD pb JOIN USERS u2 on u2.USER_ID = pb.USER_ID
				WHERE u.USER_ID = 'user2' and pb.PHOTO_CATEGORY='Lesson') as tphoto
		FROM USERS u WHERE u.USER_ID = #{param1}
	</select>
	
	<select id="list" resultType="com.sona.music.member.dto.MemberDTO">
		SELECT co.class_name
		   , CASE WHEN (SELECT COUNT(apply_state) FROM APPLY_HISTORY ah WHERE ah.apply_state = '결제 완료' AND ah.class_idx = co.class_idx GROUP BY ah.user_id) IS NULL
		         THEN 0
		         ELSE (SELECT COUNT(apply_state) FROM APPLY_HISTORY ah WHERE ah.apply_state = '결제 완료' AND ah.class_idx = co.class_idx GROUP BY ah.user_id)
		         END AS count
		   , FORMAT((SELECT avg(r.score) FROM REVIEW r WHERE co.class_idx = '2'), 2) AS score
		   , co.class_reg_date
		FROM CLASS_OPEN co
		ORDER BY CLASS_IDX desc
		LIMIT #{param2} OFFSET #{param3}
	</select>
	
	<select id="list2" resultType="com.sona.music.board.dto.ReviewDTO">
		SELECT review_title,
			rater_id,
			score,
			review_reg_date
			FROM REVIEW WHERE ratee_id = 'user2'
			ORDER BY REVIEW_IDX DESC
			LIMIT #{param2} OFFSET #{param3}
	</select>
	
	
	<select id="allCount" resultType="Integer">
		SELECT CEIL(COUNT(*)/#{param1}) AS pages FROM REVIEW
	</select>
	
</mapper>	